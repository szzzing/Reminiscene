<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="commentMapper">

    <insert id="insertOneComment">
        insert into comment
        values(default, #{movieId}, #{userId}, #{content}, #{isSpoiler}, default, default)
    </insert>

    <select id="selectOneComment" resultMap="commentResultMap">
        select c.*, u.*,
            ifnull((select rate_star from rate where rate_user_id=c.comment_user_id and rate_movie_id=c.comment_movie_id), 0) as comment_rate,
            (select count(*) from pandora3_ojt.watching where watching_movie_id=c.comment_movie_id and watching_user_id=c.comment_user_id) as is_watching,
            (select count(*) from pandora3_ojt.wish where wish_movie_id=c.comment_movie_id and wish_user_id=c.comment_user_id) as is_wish,
            (select count(*) from pandora3_ojt.like where like_comment_id=c.comment_id) as like_count,
            (select count(*) from pandora3_ojt.reply where reply_ref_id=c.comment_id and reply_enable=true) as reply_count
            <if test="loginUser!=null">
                ,(select count(*)>0 from pandora3_ojt.like where like_comment_id=c.comment_id and like_user_id=#{loginUser}) as user_like
            </if>
            <if test="loginUser==null">
                ,false as user_like
            </if>
        from comment c
            join user u on comment_user_id = user_id
        where
        <if test="id!=null">
            comment_id=#{id}
        </if>
        <if test="id==null and userId!=null and movieId!=null">
            comment_user_id=#{userId} and comment_movie_id=#{movieId}
        </if>
    </select>

    <update id="updateOneComment">
        update comment
        set comment_content=#{content},
            comment_is_spoiler=#{isSpoiler},
            comment_mod_date=current_timestamp
        where comment_user_id=#{userId} and comment_movie_id=#{movieId}
    </update>

    <select id="selectCommentList" resultMap="commentResultMap">
        select c.*, u.*,
            ifnull((select rate_star from rate where rate_user_id=c.comment_user_id and rate_movie_id=c.comment_movie_id), 0) as comment_rate,
            (select count(*) from pandora3_ojt.watching where watching_movie_id=c.comment_movie_id and watching_user_id=c.comment_user_id) as is_watching,
            (select count(*) from pandora3_ojt.wish where wish_movie_id=c.comment_movie_id and wish_user_id=c.comment_user_id) as is_wish,
            (select count(*) from pandora3_ojt.like where like_comment_id=c.comment_id) as like_count,
            (select count(*) from pandora3_ojt.reply where reply_ref_id=c.comment_id and reply_enable=true) as reply_count
            <if test="loginUser!=null">
                ,(select count(*)>0 from pandora3_ojt.like where like_comment_id=c.comment_id and like_user_id=#{loginUser}) as user_like
            </if>
            <if test="loginUser==null">
                ,false as user_like
            </if>
        from comment c
            join user u on comment_user_id = user_id
        where comment_movie_id=#{movieId}
        <choose>
            <when test='sort==null || sort.equals("recent")'>
                order by comment_id desc
            </when>
            <when test='sort.equals("famous")'>
                order by like_count desc, reply_count desc, comment_id desc
            </when>
            <when test='sort.equals("rate")'>
                order by comment_rate, comment_id desc
            </when>
        </choose>
        limit #{limit} offset #{offset}
    </select>


    <resultMap id="commentResultMap" type="com.szzzing.api.dto.comment.CommentDto">
        <result column="comment_id" property="id"/>
        <result column="comment_movie_id" property="movieId"/>
        <result column="comment_user_id" property="userId"/>
        <result column="user_nickname" property="nickname"/>
        <result column="user_profile_image" property="profileImage"/>
        <result column="comment_content" property="content"/>
        <result column="comment_rate" property="rate"/>
        <result column="comment_is_spoiler" property="isSpoiler"/>
        <result column="is_wish" property="isWish"/>
        <result column="is_watching" property="isWatching"/>
        <result column="like_count" property="likeCount"/>
        <result column="reply_count" property="replyCount"/>
        <result column="comment_cre_date" property="creDate"/>
        <result column="comment_mod_date" property="modDate"/>
        <result column="user_like" property="userLike"/>
    </resultMap>
</mapper>